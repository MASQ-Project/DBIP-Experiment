#
# The data follows the standard JSON format and will be further processed into a row of integers to feed the respective
# criterion formula to be rendered. There are three different categories of values that can be supplied via an object
# with the following fields: "literals", "decimal_exponents" and "marked_values".
#
# Literals are as string declared integers in an array whose notation can be made better readable by use of underscores.
#
# Decimal exponents are plain integers in an array and represent powers of a ten.
#
# Marked values come as objects with two fields: "value" and "label", both expecting string values. The "value" field
# also accepts underscores in the integers supplied.
#
# If the same value has been defined by any of the other categories, marked values will replace them with no conflict.
#
{
    # anomalies: places where the trend changes from ascending in the big picture to a short descending one. Such places
    # are always minor and limited so the major trend continues after an interruption. It's always a question how big
    # issue this is, usually none at all, because the bounces are shallow.
    "literals": [
            "1",
            "5",
            "9",
            "25",
            "44",
            "50",
            #
            # Local anomaly* somewhere near here
            #
            "75",
            "180",
            "600",
            "900",
            "33_333",
            "86_400",
            "255_000",
            "6_700_000",
            "55_333_000",
            "200_300_400",
            "500_000_000",
            "4_000_000_000",
            "7_000_000_000",
            "7_900_000_000",
            #
            # A bit more significant anomaly* in a long range of values, however, if taken seriously, we speak of
            # section on the time scale representing approximately 24 years. This makes the issue irrelevant.
            #
            "8_000_000_000",
            "9_000_000_000",
            "11_000_000_000",
            "15_000_000_000",
            "78_000_000_000",
            "444_333_444_444"
    ],
    "decimal_exponents": [
            2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
    ],
    "marked_values": [
            {
                "value": "60",
                "label": "MINUTE"
            },
            {
                "value": "3_600",
                "label": "HOUR"
            },
            {
                "value": "86_400",
                "label": "DAY"
            },
            {
                "value": "604_800",
                "label": "WEEK"
            },
            {
                "value": "2_628_000",
                "label": "MONTH"
            }
    ]
}